// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ==============================================================

// AXI4LiteS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : reserved
// 0x14 : Data signal of nalu_startcodeprefix_len
//        bit 31~0 - nalu_startcodeprefix_len[31:0] (Read/Write)
// 0x18 : reserved
// 0x1c : Data signal of nalu_len
//        bit 31~0 - nalu_len[31:0] (Read/Write)
// 0x20 : reserved
// 0x24 : Data signal of nalu_nal_unit_type
//        bit 31~0 - nalu_nal_unit_type[31:0] (Read/Write)
// 0x28 : reserved
// 0x2c : Data signal of nalu_nal_reference_idc
//        bit 31~0 - nalu_nal_reference_idc[31:0] (Read/Write)
// 0x30 : reserved
// 0x34 : Data signal of nalu_forbidden_bit
//        bit 31~0 - nalu_forbidden_bit[31:0] (Read/Write)
// 0x38 : reserved
// 0x3c : Data signal of nalu_bit_offset
//        bit 31~0 - nalu_bit_offset[31:0] (Read/Write)
// 0x40 : Data signal of nalu_bit_offset
//        bit 31~0 - nalu_bit_offset[63:32] (Read/Write)
// 0x44 : reserved
// 0x48 : Data signal of nalu_bit_length
//        bit 31~0 - nalu_bit_length[31:0] (Read/Write)
// 0x4c : Data signal of nalu_bit_length
//        bit 31~0 - nalu_bit_length[63:32] (Read/Write)
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XDECODE_MAIN_AXI4LITES_ADDR_AP_CTRL                       0x00
#define XDECODE_MAIN_AXI4LITES_ADDR_GIE                           0x04
#define XDECODE_MAIN_AXI4LITES_ADDR_IER                           0x08
#define XDECODE_MAIN_AXI4LITES_ADDR_ISR                           0x0c
#define XDECODE_MAIN_AXI4LITES_ADDR_NALU_STARTCODEPREFIX_LEN_DATA 0x14
#define XDECODE_MAIN_AXI4LITES_BITS_NALU_STARTCODEPREFIX_LEN_DATA 32
#define XDECODE_MAIN_AXI4LITES_ADDR_NALU_LEN_DATA                 0x1c
#define XDECODE_MAIN_AXI4LITES_BITS_NALU_LEN_DATA                 32
#define XDECODE_MAIN_AXI4LITES_ADDR_NALU_NAL_UNIT_TYPE_DATA       0x24
#define XDECODE_MAIN_AXI4LITES_BITS_NALU_NAL_UNIT_TYPE_DATA       32
#define XDECODE_MAIN_AXI4LITES_ADDR_NALU_NAL_REFERENCE_IDC_DATA   0x2c
#define XDECODE_MAIN_AXI4LITES_BITS_NALU_NAL_REFERENCE_IDC_DATA   32
#define XDECODE_MAIN_AXI4LITES_ADDR_NALU_FORBIDDEN_BIT_DATA       0x34
#define XDECODE_MAIN_AXI4LITES_BITS_NALU_FORBIDDEN_BIT_DATA       32
#define XDECODE_MAIN_AXI4LITES_ADDR_NALU_BIT_OFFSET_DATA          0x3c
#define XDECODE_MAIN_AXI4LITES_BITS_NALU_BIT_OFFSET_DATA          64
#define XDECODE_MAIN_AXI4LITES_ADDR_NALU_BIT_LENGTH_DATA          0x48
#define XDECODE_MAIN_AXI4LITES_BITS_NALU_BIT_LENGTH_DATA          64

